<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="minIdle" value="1"/>
		<!--从池中取出Jedis实例时是否校验可用,验证失败该实例被移除,并创建一个可用的新的实例,然后再被取出来-->
		<property name="testOnBorrow" value="true"/>
	</bean>

	<bean id="redisSentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master">
			<bean class="org.springframework.data.redis.connection.RedisNode">
				<property name="name" value="${spring.redis.sentinel.master}"/>
			</bean>
		</property>
		<property name="sentinels">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${spring.redis.sentinel.1.host}"/>
					<constructor-arg name="port" value="${spring.redis.sentinel.1.port}"/>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${spring.redis.sentinel.2.host}"/>
					<constructor-arg name="port" value="${spring.redis.sentinel.2.port}"/>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${spring.redis.sentinel.3.host}"/>
					<constructor-arg name="port" value="${spring.redis.sentinel.3.port}"/>
				</bean>
			</set>
		</property>
		<property name="database" value="${spring.redis.database}"/>
		<property name="password">
			<!--这里的of本不应该报红的-->
			<bean class="org.springframework.data.redis.connection.RedisPassword" factory-method="of">
				<constructor-arg name="passwordAsString" value="${spring.redis.password}"/>
			</bean>
		</property>
	</bean>

	<!--RedisConnectionFactory有两种SpringFramework实现类,JedisConnectionFactory/LettuceConnectionFactory-->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg name="sentinelConfig" ref="redisSentinelConfiguration"/>
		<constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
	</bean>

	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
	<bean id="genericJackson2JsonRedisSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>

	<!--RedisTemplate继承于RedisAccessor,需要配置一个RedisConnectionFactory-->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
		<property name="keySerializer" ref="stringRedisSerializer"/>
		<property name="valueSerializer" ref="genericJackson2JsonRedisSerializer"/>
		<property name="hashKeySerializer" ref="stringRedisSerializer"/>
		<property name="hashValueSerializer" ref="genericJackson2JsonRedisSerializer"/>
	</bean>

<!--	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">-->
<!--		<property name="connectionFactory" ref="jedisConnectionFactory"/>-->
<!--	</bean>-->

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate"/>
		<!--默认过期时间,单位秒,一天:60*60*24=86400-->
		<property name="defaultExpiration" value="86400"/>
	</bean>

</beans>